--return if the anticheat already ran
if shared.AnticheatBypass1Success then return;end;
--get the B.A.C script
local BAC = (function()
    for I, Script in next, game:GetDescendants() do
        if typeof(Script) == "Instance" and Script.ClassName == "LocalScript" then
            if Script.Name:match("B%.A%.C") then
                return Script;
            end;
        end;
    end;
end)();

--get garbage collection
local Collection = getgc(false);

local DONE = false;

(function()

    local BAC_Collection = {};

    for _, Func in next, Collection do
        --loop through garbage collection
        pcall(coroutine.wrap(function()
            --if the current item isn't a function, return
            if type(Func) ~= "function" then return end;
            --if the current item isn't a lua function, return (if it is a C function)
            if not islclosure(Func) then return end;
            
            --this is a workaround to getfenv(Func).script, which triggers the game's anticheat(god knows how)
            local env = getfenv(Func);
            local scr;
            if type(env) == "table" then
                for i,v in next, env do
                    if type(i) == "string" and i == "script" then
                        scr = v;
                        break;
                    end;
                end;
            end;
            
            --if there is no script or script has no parent, return
            if not scr or not scr.Parent then return end;
            
            --if the script is B.A.C, insert it into BAC_Collection
            if scr == BAC then
                table.insert(BAC_Collection, Func);
            end;
        end));

    end;
    --BAC_Collection now contains every Lua function in the B.A.C script

    --get the IsValid function. we could also do (if getinfo(Func).name == "IsValid")
    local IsValid;
    for _, Func in next, BAC_Collection do
        if (table.find(debug.getconstants(Func), "rbxassetid://")) then
            IsValid = Func;
            break;
        end;
    end;

    --loop through BAC_Collection to find the function which has IsValid in it's upvalues
    for _, Func in next, BAC_Collection do
        local index = (table.find(debug.getupvalues(Func), IsValid));
        if index then
            --if this function has IsValid in it's upvalues, set that upvalue to a custom function
            setupvalue(Func, index, function(...)
                local Args = {...};
                --this checks if the ID the game is validating follows rbxassetid://(NUMBERS)
                --most ids that will kick you follow this format, so we will set it to a font so the game thinks it is a valid ID
                if Args[1]:match("rbxassetid://([%d]+)") then
                    Args[1] = "rbxasset://fonts/ariel.ttf";
                end;
                --call the function with the new args (if modified), and return the result
                return IsValid(table.unpack(Args));
            end);
            --setting DONE to true will stop the loop and AnticheatBypass1Success will make sure that this script is only ran once
            DONE = true;
            shared.AnticheatBypass1Success = true;
            return;
        end;
    end;

end)();
print("Bypassed")

local baseHitboxSize = Vector3.new(2, 2, 1);
local baseTransparency = 1;
--[spoofer]
local oldGameIndex; oldGameIndex = hookmetamethod(game, "__index", newcclosure(function(...)
    local Self, Key = ...;

    if typeof(Self) == "Instance" and type(Key) == "string" and tostring(Self) == "HumanoidRootPart" and (Key == "Size" or Key == "Transparency") then
        if Key == "Size" then
            return baseHitboxSize;
        end;
        return baseTransparency;
    end;

    return oldGameIndex(...);
end));
getfenv().AutoFarm = true
if AutoFarm == true then
 
       game:GetService("RunService").Stepped:Connect(function()
    local lp = game.Players.LocalPlayer
    local plr1 = lp.Character
    while game.Workspace.GameMap and lp.PlayerGui.ScreenGui.UI.Target.Visible do
    local Target = lp.PlayerGui.ScreenGui:WaitForChild("UI"):WaitForChild("Target"):WaitForChild("TargetText").Text
    local plr2 = game.Workspace:WaitForChild(Target)
    game.Workspace.Gravity = 20
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(15,false)
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(16,false)
    game:GetService("TweenService"):Create(plr1:WaitForChild("HumanoidRootPart"),TweenInfo.new(5.5),{CFrame= plr2:WaitForChild("HumanoidRootPart").CFrame}):Play()
            local noclip = true 
    char = game.Players.LocalPlayer.Character 
    while true do 
      if noclip == true then 
        for _,v in pairs(char:children()) do 
          pcall(function() if v.className == "Part" then v.CanCollide = false elseif v.ClassName == "Model" then
             v.Head.CanCollide = false end end) 
        end 
      end 
    game:service("RunService").Stepped:wait() 
    end
end
end)

spawn(function()
    local function randompart()
        local hits = {
            0,
            1,
            2,
            -1,
            -2,
        }
        return hits[math.random(1, #hits)]
    end
    while wait() do
        pcall(function()
            if game.Players.LocalPlayer.Backpack:FindFirstChild("Knife") then
                for i, v in pairs(game.Players:GetPlayers()) do
                    if v.Name == game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text then
                        if v.Name ~= game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(Game.Players.LocalPlayer.Backpack.Knife)
                            wait(.3)
                            local Target = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text
                            local x = game.Workspace[Target].HumanoidRootPart.Position.X + randompart()
                            local y = game.Workspace[Target].HumanoidRootPart.Position.Y + randompart()
                            local z = game.Workspace[Target].HumanoidRootPart.Position.Z + randompart()
                            local args = {
                                [1] = Vector3.new(x, y, z),
                                [2] = 0,
                                [3] = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                            }
                            game:GetService("ReplicatedStorage").Remotes.ThrowKnife:FireServer(unpack(args))
                            wait(.1)
                            game:GetService("Players").localPlayer.Character:FindFirstChildOfClass("Humanoid"):UnequipTools()
                            wait(.6)
                        end
                    end
                end
            end
        end)
    end
end)

spawn(function()
    game:GetService('RunService').RenderStepped:connect(function()
for i,v in pairs(game:GetService('Players'):GetPlayers()) do
    if v.Name ~= game.Players.LocalPlayer.Name then
game.Workspace[v.Name].HumanoidRootPart.Size = Vector3.new(8,8,8)
game.Workspace[v.Name].HumanoidRootPart.Transparency = 1
game.Workspace[v.Name].HumanoidRootPart.BrickColor = BrickColor.new("Really red")
game.Workspace[v.Name].HumanoidRootPart.Material = "Neon"
game.Workspace[v.Name].HumanoidRootPart.CanCollide = false
wait()
end
end
end)
end)

 -- Made by JackMcJagger15

power = 300 -- change this to make it more or less powerful

game:GetService('RunService').Stepped:connect(function()
game.Players.LocalPlayer.Character.Head.CanCollide = false
game.Players.LocalPlayer.Character.Torso.CanCollide = false
game.Players.LocalPlayer.Character["Left Leg"].CanCollide = false
game.Players.LocalPlayer.Character["Right Leg"].CanCollide = false
end)

wait(.1)
local bambam = Instance.new("BodyThrust")
bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bambam.Force = Vector3.new(power,0,power)
bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

spawn(function()
    while wait(300) do
        pcall(function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
        end)
    end
end)
end

local UILibrary = loadstring(game:HttpGet("https://pastebin.com/raw/V1ca2q9s"))()

local MainUI = UILibrary.Load("Kings Script ðŸ‘‘")
local FirstPage = MainUI.AddPage("AutoFarm")
local FirstLabel = FirstPage.AddLabel("AutoFarm RE-VAMP")
local FirstButton = FirstPage.AddButton("AutoFarm ", function()
       game:GetService("RunService").Stepped:Connect(function()
    local lp = game.Players.LocalPlayer
    local plr1 = lp.Character
    while game.Workspace.GameMap and lp.PlayerGui.ScreenGui.UI.Target.Visible do
    local Target = lp.PlayerGui.ScreenGui:WaitForChild("UI"):WaitForChild("Target"):WaitForChild("TargetText").Text
    local plr2 = game.Workspace:WaitForChild(Target)
    game.Workspace.Gravity = 20
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(15,false)
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(16,false)
    game:GetService("TweenService"):Create(plr1:WaitForChild("HumanoidRootPart"),TweenInfo.new(5.5),{CFrame= plr2:WaitForChild("HumanoidRootPart").CFrame}):Play()
            local noclip = true 
    char = game.Players.LocalPlayer.Character 
    while true do 
      if noclip == true then 
        for _,v in pairs(char:children()) do 
          pcall(function() if v.className == "Part" then v.CanCollide = false elseif v.ClassName == "Model" then
             v.Head.CanCollide = false end end) 
        end 
      end 
    game:service("RunService").Stepped:wait() 
    end
end
end)

spawn(function()
    local function randompart()
        local hits = {
            0,
            1,
            2,
            -1,
            -2,
        }
        return hits[math.random(1, #hits)]
    end
    while wait() do
        pcall(function()
            if game.Players.LocalPlayer.Backpack:FindFirstChild("Knife") then
                for i, v in pairs(game.Players:GetPlayers()) do
                    if v.Name == game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text then
                        if v.Name ~= game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(Game.Players.LocalPlayer.Backpack.Knife)
                            wait(.3)
                            local Target = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text
                            local x = game.Workspace[Target].HumanoidRootPart.Position.X + randompart()
                            local y = game.Workspace[Target].HumanoidRootPart.Position.Y + randompart()
                            local z = game.Workspace[Target].HumanoidRootPart.Position.Z + randompart()
                            local args = {
                                [1] = Vector3.new(x, y, z),
                                [2] = 0,
                                [3] = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                            }
                            game:GetService("ReplicatedStorage").Remotes.ThrowKnife:FireServer(unpack(args))
                            wait(.1)
                            game:GetService("Players").localPlayer.Character:FindFirstChildOfClass("Humanoid"):UnequipTools()
                            wait(.6)
                        end
                    end
                end
            end
        end)
    end
end)

spawn(function()
    game:GetService('RunService').RenderStepped:connect(function()
for i,v in pairs(game:GetService('Players'):GetPlayers()) do
    if v.Name ~= game.Players.LocalPlayer.Name then
game.Workspace[v.Name].HumanoidRootPart.Size = Vector3.new(8,8,8)
game.Workspace[v.Name].HumanoidRootPart.Transparency = 1
game.Workspace[v.Name].HumanoidRootPart.BrickColor = BrickColor.new("Really red")
game.Workspace[v.Name].HumanoidRootPart.Material = "Neon"
game.Workspace[v.Name].HumanoidRootPart.CanCollide = false
wait()
end
end
end)
end)

 -- Made by JackMcJagger15

power = 300 -- change this to make it more or less powerful

game:GetService('RunService').Stepped:connect(function()
game.Players.LocalPlayer.Character.Head.CanCollide = false
game.Players.LocalPlayer.Character.Torso.CanCollide = false
game.Players.LocalPlayer.Character["Left Leg"].CanCollide = false
game.Players.LocalPlayer.Character["Right Leg"].CanCollide = false
end)

wait(.1)
local bambam = Instance.new("BodyThrust")
bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bambam.Force = Vector3.new(power,0,power)
bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

spawn(function()
    while wait(300) do
        pcall(function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
        end)
end
end)
end)
    
local FirstPage = MainUI.AddPage("LocalPlayer")

local FirstLabel = FirstPage.AddLabel("GodMode")
local FirstButton = FirstPage.AddButton("Auto GodMode", function()
spawn(function()
    while wait(1) do
        pcall(function()
            if game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.SpectateBar.ButtonBar.GhostB.Visible == true then
                wait(.5)
                for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.SpectateBar.ButtonBar.GhostB.MouseButton1Click)) do
                    v:Fire()
                end
            end
        end)
    end
end)

spawn(function()
    while wait(.5) do
        pcall(function()
            for _,v in pairs(game:GetService("Workspace").GhostCoins:GetDescendants()) do
                if v:IsA("TouchTransmitter") then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0) --0 is touch
                    wait(.5)
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1) -- 1 is untouch
                end
            end
        end)
    end
end)
end)
local FirstLabel = FirstPage.AddLabel("Noclip")
local FirstToggle = FirstPage.AddToggle("        Noclip", false, function(Value)
    if Value == true then
getgenv().NoclipS = true
else
    if Value == false then
        getgenv().NoclipS = false
    end
    end
    end)

local FirstLabel = FirstPage.AddLabel("WalkSpeed/JumpPower/Gravity")
local FirstSlider = FirstPage.AddSlider("WalkSpeed", {Min = 0, Max = 255, Def = 16}, function(Value)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local FirstSlider = FirstPage.AddSlider("JumpPower", {Min = 0, Max = 255, Def = 50}, function(Value)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)
local FirstSlider = FirstPage.AddSlider("Gravity", {Min = 1000, Max = 0, Def = 196.2}, function(Value)
game.Workspace.Gravity = Value
end)
local FirstPage = MainUI.AddPage("HBE")
local FirstToggle = FirstPage.AddToggle("Turn HBE ON/OFF", false, function(Value)
if Value == true then
    getgenv().CantSeeMEEE = 0.5
    getgenv().Age = Vector3.new(5,5,5)
    print("ON")
    else
        if Value == false then
            getgenv().CantSeeMEEE = 1
            getgenv().Age = Vector3.new(2,2,1)
            print("OFF")
        end
        end
end)
local FirstSlider = FirstPage.AddSlider("HBE Size", {Min = 0, Max = 100, Def = 5}, function(Value)
getgenv().Age = Vector3.new(Value,Value,Value)
end)
local FirstPicker = FirstPage.AddColourPicker("HBE Colour", "white", function(Value)
getgenv().SussyBiis = Value
print(SussyBiis)
end)

spawn(function()
    game:GetService('RunService').RenderStepped:connect(function()
for i,v in pairs(game:GetService('Players'):GetPlayers()) do
    if v.Name ~= game.Players.LocalPlayer.Name then
game.Workspace[v.Name].HumanoidRootPart.Size = Age
game.Workspace[v.Name].HumanoidRootPart.Transparency = CantSeeMEEE
game.Workspace[v.Name].HumanoidRootPart.Color = SussyBiis
game.Workspace[v.Name].HumanoidRootPart.Material = "Neon"
game.Workspace[v.Name].HumanoidRootPart.CanCollide = false
wait()
end
end
end)
end)

char = game.Players.LocalPlayer.Character 
while true do 
  if NoclipS == true then 
    for _,v in pairs(char:children()) do 
      pcall(function() if v.className == "Part" then v.CanCollide = false elseif v.ClassName == "Model" then
         v.Head.CanCollide = false end end) 
    end 
  end 
game:service("RunService").Stepped:wait() 
end
