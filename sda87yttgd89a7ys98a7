getgenv().AutoFarm = true

local CoreGui = game.CoreGui
local ContentProvider = game.ContentProvider
local RobloxGuis = {"RobloxGui", "TeleportGui", "RobloxPromptGui", "RobloxLoadingGui", "PlayerList", "RobloxNetworkPauseNotification", "PurchasePrompt", "HeadsetDisconnectedDialog", "ThemeProvider", "DevConsoleMaster"}

local function FilterTable(tbl)
    local context = syn_context_get()
    syn_context_set(7)
    local new = {}
    for i,v in ipairs(tbl) do --roblox iterates the array part
        if typeof(v) ~= "Instance" then
            table.insert(new, v)
        else
            if v == CoreGui or v == game then
                --insert only the default roblox guis
                for i,v in pairs(RobloxGuis) do
                    local gui = CoreGui:FindFirstChild(v)
                    if gui then
                        table.insert(new, gui)
                    end
                end

                if v == game then
                    for i,v in pairs(game:GetChildren()) do
                        if v ~= CoreGui then
                            table.insert(new, v)
                        end
                    end
                end
            else
                if not CoreGui:IsAncestorOf(v) then
                    table.insert(new, v)
                else
                    --don't insert it if it's a descendant of a different gui than default roblox guis
                    for j,k in pairs(RobloxGuis) do
                        local gui = CoreGui:FindFirstChild(k)
                        if gui then
                            if v == gui or gui:IsAncestorOf(v) then
                                table.insert(new, v)
                                break
                            end
                        end
                    end
                end
            end
        end
    end
    syn_context_set(context)
    return new
end

local old
old = hookfunc(ContentProvider.PreloadAsync, function(self, tbl, cb)
    if self ~= ContentProvider or type(tbl) ~= "table" or type(cb) ~= "function" then --note: callback can be nil but in that case it's useless anyways
        return old(self, tbl, cb)
    end

    --check for any errors that I might've missed (such as table being {[2] = "something"} which causes "Unable to cast to Array")
    local err
    task.spawn(function() --TIL pcalling a C yield function inside a C yield function is a bad idea ("cannot resume non-suspended coroutine")
        local s,e = pcall(old, self, tbl)
        if not s and e then
            err = e
        end
    end)
   
    if err then
        return old(self, tbl) --don't pass the callback, just in case
    end

    tbl = FilterTable(tbl)
    return old(self, tbl, cb)
end)

local old
old = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    if self == ContentProvider and (method == "PreloadAsync" or method == "preloadAsync") then
        local args = {...}
        if type(args[1]) ~= "table" or type(args[2]) ~= "function" then
            return old(self, ...)
        end

        local err
        task.spawn(function()
            setnamecallmethod(method) --different thread, different namecall method
            local s,e = pcall(old, self, args[1])
            if not s and e then
                err = e
            end
        end)

        if err then
            return old(self, args[1])
        end

        args[1] = FilterTable(args[1])
        setnamecallmethod(method)
        return old(self, args[1], args[2])
    end
    return old(self, ...)
end)

local baseHitboxSize = Vector3.new(2, 2, 1);
local baseTransparency = 1;
--[spoofer]
local oldGameIndex; oldGameIndex = hookmetamethod(game, "__index", newcclosure(function(...)
    local Self, Key = ...;

    if typeof(Self) == "Instance" and type(Key) == "string" and tostring(Self) == "HumanoidRootPart" and (Key == "Size" or Key == "Transparency") then
        if Key == "Size" then
            return baseHitboxSize;
        end;
        return baseTransparency;
    end;

    return oldGameIndex(...);
end));

local UILibrary = loadstring(game:HttpGet("https://pastebin.com/raw/V1ca2q9s"))()

local MainUI = UILibrary.Load("Kings Script ðŸ‘‘")
local FirstPage = MainUI.AddPage("AutoFarm")
local FirstLabel = FirstPage.AddLabel("AutoFarm RE-VAMP")
local FirstButton = FirstPage.AddButton("AutoFarm ", function()
       game:GetService("RunService").Stepped:Connect(function()
    local lp = game.Players.LocalPlayer
    local plr1 = lp.Character
    while game.Workspace.GameMap and lp.PlayerGui.ScreenGui.UI.Target.Visible do
    local Target = lp.PlayerGui.ScreenGui:WaitForChild("UI"):WaitForChild("Target"):WaitForChild("TargetText").Text
    local plr2 = game.Workspace:WaitForChild(Target)
    game.Workspace.Gravity = 20
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(15,false)
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(16,false)
    game:GetService("TweenService"):Create(plr1:WaitForChild("HumanoidRootPart"),TweenInfo.new(5.5),{CFrame= plr2:WaitForChild("HumanoidRootPart").CFrame}):Play()
            local noclip = true 
    char = game.Players.LocalPlayer.Character 
    while true do 
      if noclip == true then 
        for _,v in pairs(char:children()) do 
          pcall(function() if v.className == "Part" then v.CanCollide = false elseif v.ClassName == "Model" then
             v.Head.CanCollide = false end end) 
        end 
      end 
    game:service("RunService").Stepped:wait() 
    end
end
end)

spawn(function()
    local function randompart()
        local hits = {
            0,
            1,
            2,
            -1,
            -2,
        }
        return hits[math.random(1, #hits)]
    end
    while wait() do
        pcall(function()
            if game.Players.LocalPlayer.Backpack:FindFirstChild("Knife") then
                for i, v in pairs(game.Players:GetPlayers()) do
                    if v.Name == game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text then
                        if v.Name ~= game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(Game.Players.LocalPlayer.Backpack.Knife)
                            wait(.3)
                            local Target = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text
                            local x = game.Workspace[Target].HumanoidRootPart.Position.X + randompart()
                            local y = game.Workspace[Target].HumanoidRootPart.Position.Y + randompart()
                            local z = game.Workspace[Target].HumanoidRootPart.Position.Z + randompart()
                            local args = {
                                [1] = Vector3.new(x, y, z),
                                [2] = 0,
                                [3] = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                            }
                            game:GetService("ReplicatedStorage").Remotes.ThrowKnife:FireServer(unpack(args))
                            wait(.1)
                            game:GetService("Players").localPlayer.Character:FindFirstChildOfClass("Humanoid"):UnequipTools()
                            wait(.6)
                        end
                    end
                end
            end
        end)
    end
end)

spawn(function()
    game:GetService('RunService').RenderStepped:connect(function()
for i,v in pairs(game:GetService('Players'):GetPlayers()) do
    if v.Name ~= game.Players.LocalPlayer.Name then
game.Workspace[v.Name].HumanoidRootPart.Size = Vector3.new(8,8,8)
game.Workspace[v.Name].HumanoidRootPart.Transparency = 1
game.Workspace[v.Name].HumanoidRootPart.BrickColor = BrickColor.new("Really red")
game.Workspace[v.Name].HumanoidRootPart.Material = "Neon"
game.Workspace[v.Name].HumanoidRootPart.CanCollide = false
wait()
end
end
end)
end)

 -- Made by JackMcJagger15

power = 300 -- change this to make it more or less powerful

game:GetService('RunService').Stepped:connect(function()
game.Players.LocalPlayer.Character.Head.CanCollide = false
game.Players.LocalPlayer.Character.Torso.CanCollide = false
game.Players.LocalPlayer.Character["Left Leg"].CanCollide = false
game.Players.LocalPlayer.Character["Right Leg"].CanCollide = false
end)

wait(.1)
local bambam = Instance.new("BodyThrust")
bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bambam.Force = Vector3.new(power,0,power)
bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

spawn(function()
    while wait(300) do
        pcall(function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
        end)
end
end)
end)
    
local FirstPage = MainUI.AddPage("LocalPlayer")

local FirstLabel = FirstPage.AddLabel("GodMode")
local FirstButton = FirstPage.AddButton("Auto GodMode", function()
spawn(function()
    while wait(1) do
        pcall(function()
            if game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.SpectateBar.ButtonBar.GhostB.Visible == true then
                wait(.5)
                for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.SpectateBar.ButtonBar.GhostB.MouseButton1Click)) do
                    v:Fire()
                end
            end
        end)
    end
end)

spawn(function()
    while wait(.5) do
        pcall(function()
            for _,v in pairs(game:GetService("Workspace").GhostCoins:GetDescendants()) do
                if v:IsA("TouchTransmitter") then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0) --0 is touch
                    wait(.5)
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1) -- 1 is untouch
                end
            end
        end)
    end
end)
end)
local FirstLabel = FirstPage.AddLabel("Noclip")
local FirstToggle = FirstPage.AddToggle("        Noclip", false, function(Value)
    if Value == true then
getgenv().NoclipS = true
else
    if Value == false then
        getgenv().NoclipS = false
    end
    end
    end)

local FirstLabel = FirstPage.AddLabel("WalkSpeed/JumpPower/Gravity")
local FirstSlider = FirstPage.AddSlider("WalkSpeed", {Min = 0, Max = 255, Def = 16}, function(Value)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local FirstSlider = FirstPage.AddSlider("JumpPower", {Min = 0, Max = 255, Def = 50}, function(Value)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)
local FirstSlider = FirstPage.AddSlider("Gravity", {Min = 1000, Max = 0, Def = 196.2}, function(Value)
game.Workspace.Gravity = Value
end)
local FirstPage = MainUI.AddPage("HBE")
local FirstToggle = FirstPage.AddToggle("Turn HBE ON/OFF", false, function(Value)
if Value == true then
    getgenv().CantSeeMEEE = 0.5
    getgenv().Age = Vector3.new(5,5,5)
    print("ON")
    else
        if Value == false then
            getgenv().CantSeeMEEE = 1
            getgenv().Age = Vector3.new(2,2,1)
            print("OFF")
        end
        end
end)
local FirstSlider = FirstPage.AddSlider("HBE Size", {Min = 0, Max = 100, Def = 5}, function(Value)
getgenv().Age = Vector3.new(Value,Value,Value)
end)
local FirstPicker = FirstPage.AddColourPicker("HBE Colour", "white", function(Value)
getgenv().SussyBiis = Value
print(SussyBiis)
end)

spawn(function()
    game:GetService('RunService').RenderStepped:connect(function()
for i,v in pairs(game:GetService('Players'):GetPlayers()) do
    if v.Name ~= game.Players.LocalPlayer.Name then
game.Workspace[v.Name].HumanoidRootPart.Size = Age
game.Workspace[v.Name].HumanoidRootPart.Transparency = CantSeeMEEE
game.Workspace[v.Name].HumanoidRootPart.Color = SussyBiis
game.Workspace[v.Name].HumanoidRootPart.Material = "Neon"
game.Workspace[v.Name].HumanoidRootPart.CanCollide = false
wait()
end
end
end)
end)

char = game.Players.LocalPlayer.Character 
while true do 
  if NoclipS == true then 
    for _,v in pairs(char:children()) do 
      pcall(function() if v.className == "Part" then v.CanCollide = false elseif v.ClassName == "Model" then
         v.Head.CanCollide = false end end) 
    end 
  end 
game:service("RunService").Stepped:wait() 
end

if AutoFarm == true then
 
       game:GetService("RunService").Stepped:Connect(function()
    local lp = game.Players.LocalPlayer
    local plr1 = lp.Character
    while game.Workspace.GameMap and lp.PlayerGui.ScreenGui.UI.Target.Visible do
    local Target = lp.PlayerGui.ScreenGui:WaitForChild("UI"):WaitForChild("Target"):WaitForChild("TargetText").Text
    local plr2 = game.Workspace:WaitForChild(Target)
    game.Workspace.Gravity = 20
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(15,false)
    game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(16,false)
    game:GetService("TweenService"):Create(plr1:WaitForChild("HumanoidRootPart"),TweenInfo.new(5.5),{CFrame= plr2:WaitForChild("HumanoidRootPart").CFrame}):Play()
            local noclip = true 
    char = game.Players.LocalPlayer.Character 
    while true do 
      if noclip == true then 
        for _,v in pairs(char:children()) do 
          pcall(function() if v.className == "Part" then v.CanCollide = false elseif v.ClassName == "Model" then
             v.Head.CanCollide = false end end) 
        end 
      end 
    game:service("RunService").Stepped:wait() 
    end
end
end)

spawn(function()
    local function randompart()
        local hits = {
            0,
            1,
            2,
            -1,
            -2,
        }
        return hits[math.random(1, #hits)]
    end
    while wait() do
        pcall(function()
            if game.Players.LocalPlayer.Backpack:FindFirstChild("Knife") then
                for i, v in pairs(game.Players:GetPlayers()) do
                    if v.Name == game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text then
                        if v.Name ~= game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(Game.Players.LocalPlayer.Backpack.Knife)
                            wait(.3)
                            local Target = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.UI.Target.TargetText.Text
                            local x = game.Workspace[Target].HumanoidRootPart.Position.X + randompart()
                            local y = game.Workspace[Target].HumanoidRootPart.Position.Y + randompart()
                            local z = game.Workspace[Target].HumanoidRootPart.Position.Z + randompart()
                            local args = {
                                [1] = Vector3.new(x, y, z),
                                [2] = 0,
                                [3] = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                            }
                            game:GetService("ReplicatedStorage").Remotes.ThrowKnife:FireServer(unpack(args))
                            wait(.1)
                            game:GetService("Players").localPlayer.Character:FindFirstChildOfClass("Humanoid"):UnequipTools()
                            wait(.6)
                        end
                    end
                end
            end
        end)
    end
end)

spawn(function()
    game:GetService('RunService').RenderStepped:connect(function()
for i,v in pairs(game:GetService('Players'):GetPlayers()) do
    if v.Name ~= game.Players.LocalPlayer.Name then
game.Workspace[v.Name].HumanoidRootPart.Size = Vector3.new(8,8,8)
game.Workspace[v.Name].HumanoidRootPart.Transparency = 1
game.Workspace[v.Name].HumanoidRootPart.BrickColor = BrickColor.new("Really red")
game.Workspace[v.Name].HumanoidRootPart.Material = "Neon"
game.Workspace[v.Name].HumanoidRootPart.CanCollide = false
wait()
end
end
end)
end)

 -- Made by JackMcJagger15

power = 300 -- change this to make it more or less powerful

game:GetService('RunService').Stepped:connect(function()
game.Players.LocalPlayer.Character.Head.CanCollide = false
game.Players.LocalPlayer.Character.Torso.CanCollide = false
game.Players.LocalPlayer.Character["Left Leg"].CanCollide = false
game.Players.LocalPlayer.Character["Right Leg"].CanCollide = false
end)

wait(.1)
local bambam = Instance.new("BodyThrust")
bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bambam.Force = Vector3.new(power,0,power)
bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

spawn(function()
    while wait(300) do
        pcall(function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
        end)
    end
end)
end
